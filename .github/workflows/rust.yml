name: Rust

on: [push, pull_request]

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-channel: ['stable', 'nightly']
        rust-target: [
            'armv7-linux-androideabi',
            'aarch64-linux-android',
            'i686-linux-android',
            'x86_64-linux-android',
        ]

    steps:
    - uses: actions/checkout@v2

    - name: Installing Rust ${{ matrix.rust-channel }} w/ ${{ matrix.rust-target }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-channel }}
        target: ${{ matrix.rust-target }}
        override: true

    - name: Test ndk-sys
      run:
        cargo test -p ndk-sys --all-features

    - name: Test ndk
      run:
        cargo test -p ndk --all-features

    - name: Test ndk-build
      run:
        cargo test -p ndk-build --all-features

    - name: Test ndk-glue
      run:
        cargo test -p ndk-glue --all-features

    - name: Test ndk-macro
      run:
        cargo test -p ndk-macro --all-features

    - name: Test cargo-apk
      run:
        cargo test -p cargo-apk --all-features

    - name: Install cargo-apk
      run:
        cargo install --path cargo-apk

    - name: Check compiling on target ${{ matrix.rust-target }}
      run: |
        cargo check -p ndk --target ${{ matrix.rust-target }}
        cargo apk build -p ndk-examples --target ${{ matrix.rust-target }} --examples
