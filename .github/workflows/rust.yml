name: Rust

on: [push, pull_request]

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  build:
    strategy:
      fail-fast: false
      matrix:
        os:  [ubuntu-latest]
        rust-channel: ['stable', 'nightly']
        rust-target:
          - 'armv7-linux-androideabi'
          - 'aarch64-linux-android'
          - 'i686-linux-android'
          - 'x86_64-linux-android'
        include:
          - os: windows-latest
            rust-channel: 'stable'
            rust-target: 'aarch64-linux-android'

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Installing Rust ${{ matrix.rust-channel }} w/ ${{ matrix.rust-target }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-channel }}
        target: ${{ matrix.rust-target }}
        override: true

    - if: runner.os != 'Windows'
      name: Test ndk-sys
      run:
        cargo test -p ndk-sys --all-features

    - if: runner.os != 'Windows'
      name: Test ndk
      run:
        cargo test -p ndk --all-features

    - name: Test ndk-build
      run:
        cargo test -p ndk-build --all-features

    - if: runner.os != 'Windows'
      name: Test ndk-glue
      run:
        cargo test -p ndk-glue --all-features

    - if: runner.os != 'Windows'
      name: Test ndk-macro
      run:
        cargo test -p ndk-macro --all-features

    - name: Test cargo-apk
      run:
        cargo test -p cargo-apk --all-features

    - name: Install cargo-apk
      run:
        cargo install --path cargo-apk

    - if: runner.os == 'Windows'
      name: Create symlink to Android SDK/NDK without spaces
      run: |
        $oldAndroidPath = $env:ANDROID_HOME
        $sdk_root = "C:\Android"
        New-Item -Path $sdk_root -ItemType SymbolicLink -Value $oldAndroidPath

        echo "ANDROID_SDK_ROOT=$sdk_root" >> $env:GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$sdk_root\ndk-bundle" >> $env:GITHUB_ENV

        # Update legacy path for ndk-build:
        echo "ANDROID_HOME=$sdk_root" >> $env:GITHUB_ENV

        # Unset legacy paths:
        echo "ANDROID_NDK_HOME=" >> $env:GITHUB_ENV
        echo "ANDROID_NDK_PATH=" >> $env:GITHUB_ENV

    - name: Check compiling on target ${{ matrix.rust-target }}
      run: |
        cargo check -p ndk --target ${{ matrix.rust-target }} --all-features
        cargo apk build -p ndk-examples --target ${{ matrix.rust-target }} --examples

    - name: Check NDK docs for ${{ matrix.rust-target }}
      env:
        RUSTDOCFLAGS: -Dwarnings
      run:
        cargo doc -p ndk --target ${{ matrix.rust-target }} --all-features
